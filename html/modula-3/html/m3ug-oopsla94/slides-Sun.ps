%!
%%BoundingBox: (atend)
%%Pages: (atend)
%%DocumentFonts: (atend)
%%EndComments
%
% FrameMaker PostScript Prolog 3.0, for use with FrameMaker 3.0
% Copyright (c) 1986,87,89,90,91 by Frame Technology Corporation.
% All rights reserved.
%
% Known Problems:
%	Due to bugs in Transcript, the 'PS-Adobe-' is omitted from line 1
/FMversion (3.0) def 
% Set up Color vs. Black-and-White
	/FMPrintInColor systemdict /colorimage known
		systemdict /currentcolortransfer known or def
% Uncomment this line to force b&w on color printer
%   /FMPrintInColor false def
/FrameDict 195 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne dup {setmanualfeed} if
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	setpapername 
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{pop pop}
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin
	array /fillvals exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	/FMdicttop countdictstack 1 add def 
	statusdict begin stopped end 
	countdictstack -1 FMdicttop {pop end} for 
	} def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq {pop 1} if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div FMsetgray
	/graymode false def
	} bind def
/grayness {
	FMsetgray
	graymode not {
		/graymode true def
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
	/HUE FMLOCAL
	/SAT FMLOCAL
	/BRIGHT FMLOCAL
	/Colors FMLOCAL
FMPrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment / yellow
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} def
	/FMsetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	/FMsetgray {setgray} bind def
	/K { 
		pop
		} def
	}
ifelse
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setpattern} 
	{grayness}
	ifelse
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	newpath
	x1 y1 rad add moveto
	x1 y2 x2 y2 rad arcto
	x2 y2 x2 y1 rad arcto
	x2 y1 x1 y1 rad arcto
	x1 y1 x1 y2 rad arcto
	closepath
	16 {pop} repeat
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
	dup 
	8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
	/proc1 FMLOCAL
	/proc2 FMLOCAL
	/newproc FMLOCAL
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} {is} {is} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} {is} {is} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        
        /is w string def
        
        ws 0 w getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {ip} {gip} {bip} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        
        /is w string def
        
        ws 0 w getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {ip gip bip w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
%%EndProlog
%%BeginSetup
(3.0) FMVERSION
1 1 612 792 0 1 4 FMDOCUMENT
0 0 /Times-Roman FMFONTDEFINE
1 0 /Times-Bold FMFONTDEFINE
2 0 /Times-Italic FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 .1 FMFILL
2 .3 FMFILL
3 .5 FMFILL
4 .7 FMFILL
5 .9 FMFILL
6 .97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 .9 FMFILL
18 .7 FMFILL
19 .5 FMFILL
20 .3 FMFILL
21 .1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "1" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 1 FMBEGINPAGE
72 744 720 756 R
7 X
0 K
V
0 12 Q
0 X
(94-0425) 680.03 748 T
77 186 775 209 R
7 X
V
0 X
(Modula-3 at SML) 357.69 201 T
(1) 758 201 T
43.56 216 756 756 18 RR
2 H
0 Z
N
90 198 279 234 R
7 X
V
0.5 H
N
0 22 386 476 541 189 45 90 207 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: idraw
%%DocumentFonts: Times-Bold
%%Pages: 1
%%BoundingBox: 22 386 476 541
%%EndComments

/arrowHeight 9 def
/arrowWidth 5 def

/IdrawDict 51 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Times-Bold reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def

%%EndProlog

%%BeginIdrawPrologue
/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

%%EndIdrawPrologue

%I Idraw 10 Grid 9.21942e-41 9.21942e-41 

%%Page: 1 1

Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.866142 0 0 0.866142 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 13.4946 -359.625 ] concat

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0729673 -0.0729673 -0.0729673 0.0729673 85.0216 843.277 ] concat
%I
319 495 73 73 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0688227 -0.0688227 -0.0688227 0.0688227 82.13 842.974 ] concat
%I
315 506 11 11 Elli
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0688227 -0.0688227 -0.0688227 0.0688227 89.6044 850.641 ] concat
%I
343 492 425 515 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0650689 -0.0650689 -0.0688227 0.0688227 89.0075 848.805 ] concat
%I
161 525 434 591 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0650689 -0.0650689 -0.0688227 0.0688227 95.1184 842.694 ] concat
%I
161 525 434 591 Rect
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0729673 0.0729673 -0.0729673 0.0729673 62.8122 796.842 ] concat
%I
319 495 73 73 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0688227 0.0688227 -0.0688227 0.0688227 63.115 799.734 ] concat
%I
315 506 11 11 Elli
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0688227 0.0688227 -0.0688227 0.0688227 55.4484 792.259 ] concat
%I
343 492 425 515 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0650689 0.0650689 -0.0688227 0.0688227 57.2841 792.856 ] concat
%I
161 525 434 591 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0650689 0.0650689 -0.0688227 0.0688227 63.395 786.745 ] concat
%I
161 525 434 591 Rect
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0729673 -0.0729673 -0.0729673 0.0729673 133.335 843.002 ] concat
%I
319 495 73 73 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0688227 -0.0688227 -0.0688227 0.0688227 130.444 842.699 ] concat
%I
315 506 11 11 Elli
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0688227 -0.0688227 -0.0688227 0.0688227 137.918 850.366 ] concat
%I
343 492 425 515 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0650689 -0.0650689 -0.0688227 0.0688227 137.321 848.53 ] concat
%I
161 525 434 591 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0650689 -0.0650689 -0.0688227 0.0688227 143.432 842.419 ] concat
%I
161 525 434 591 Rect
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0729673 0.0729673 -0.0729673 0.0729673 111.126 796.567 ] concat
%I
319 495 73 73 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0688227 0.0688227 -0.0688227 0.0688227 111.429 799.459 ] concat
%I
315 506 11 11 Elli
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0688227 0.0688227 -0.0688227 0.0688227 103.762 791.984 ] concat
%I
343 492 425 515 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0650689 0.0650689 -0.0688227 0.0688227 105.598 792.581 ] concat
%I
161 525 434 591 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0650689 0.0650689 -0.0688227 0.0688227 111.709 786.47 ] concat
%I
161 525 434 591 Rect
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0729673 0.0729673 0.0729673 0.0729673 49.2746 833.544 ] concat
%I
319 495 73 73 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0688227 0.0688227 0.0688227 0.0688227 48.9717 836.436 ] concat
%I
315 506 11 11 Elli
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0688227 0.0688227 0.0688227 0.0688227 56.6383 828.962 ] concat
%I
343 492 425 515 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0650689 0.0650689 0.0688227 0.0688227 54.8026 829.559 ] concat
%I
161 525 434 591 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0650689 0.0650689 0.0688227 0.0688227 48.6917 823.448 ] concat
%I
161 525 434 591 Rect
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0729673 -0.0729673 0.0729673 0.0729673 2.83955 855.754 ] concat
%I
319 495 73 73 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0688227 -0.0688227 0.0688227 0.0688227 5.73122 855.451 ] concat
%I
315 506 11 11 Elli
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0688227 -0.0688227 0.0688227 0.0688227 -1.74321 863.118 ] concat
%I
343 492 425 515 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0650689 -0.0650689 0.0688227 0.0688227 -1.14633 861.282 ] concat
%I
161 525 434 591 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0650689 -0.0650689 0.0688227 0.0688227 -7.25723 855.171 ] concat
%I
161 525 434 591 Rect
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0729673 0.0729673 0.0729673 0.0729673 48.9993 784.956 ] concat
%I
319 495 73 73 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0688227 0.0688227 0.0688227 0.0688227 48.6964 787.847 ] concat
%I
315 506 11 11 Elli
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0688227 0.0688227 0.0688227 0.0688227 56.363 780.373 ] concat
%I
343 492 425 515 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0650689 0.0650689 0.0688227 0.0688227 54.5273 780.97 ] concat
%I
161 525 434 591 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0650689 0.0650689 0.0688227 0.0688227 48.4164 774.859 ] concat
%I
161 525 434 591 Rect
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0729673 -0.0729673 0.0729673 0.0729673 2.56425 807.165 ] concat
%I
319 495 73 73 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0688227 -0.0688227 0.0688227 0.0688227 5.45592 806.862 ] concat
%I
315 506 11 11 Elli
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0688227 -0.0688227 0.0688227 0.0688227 -2.01851 814.529 ] concat
%I
343 492 425 515 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0650689 -0.0650689 0.0688227 0.0688227 -1.42163 812.693 ] concat
%I
161 525 434 591 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0650689 -0.0650689 0.0688227 0.0688227 -7.53253 806.582 ] concat
%I
161 525 434 591 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ -0.649342 0 0 0.649342 567.795 229.851 ] concat

Begin %I CBSpl
none SetB %I b n
%I cfg Black
0 0 0 SetCFg
%I cbg Yellow
1 1 0 SetCBg
%I p
1 SetP
%I t
[ 0.997933 -0 -0 0.997933 -0 71.8512 ] concat
%I 52
188 531
183 526
171 494
152 488
151 491
132 500
108 534
108 534
109 499
100 469
88 460
66 456
30 470
30 470
38 458
70 422
75 409
65 393
42 369
42 369
66 370
87 366
100 351
90 305
87 305
120 339
144 339
160 322
179 301
178 302
177 332
189 356
216 369
233 364
389 318
389 320
243 371
228 390
236 400
246 416
636 420
636 421
241 430
222 438
214 451
226 471
236 498
236 498
220 488
191 482
185 496
183 526
52 CBSpl
End

Begin %I Elli
none SetB %I b n
%I cfg Black
0 0 0 SetCFg
%I cbg Black
0 0 0 SetCBg
%I p
1 SetP
%I t
[ -0.400828 0 -0 0.400828 279.24 326.944 ] concat
%I
268 448 7 25 Elli
End

Begin %I Elli
none SetB %I b n
%I cfg Black
0 0 0 SetCFg
%I cbg Black
0 0 0 SetCBg
%I p
1 SetP
%I t
[ -0.400828 0 -0 0.400828 231.14 326.543 ] concat
%I
268 448 7 25 Elli
End

Begin %I Rect
none SetB %I b n
%I cfg Yellow
1 1 0 SetCFg
%I cbg Yellow
1 1 0 SetCBg
%I p
1 SetP
%I t
[ -0.997933 0 0 0.997933 665.316 71.8513 ] concat
%I
487 348 566 391 Rect
End

Begin %I Elli
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg Yellow
1 1 0 SetCBg
none SetP %I p n
%I t
[ -0.400828 0 -0 0.400828 279.641 326.944 ] concat
%I
329 395 166 166 Elli
End

Begin %I BSpl
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg Black
0 0 0 SetCBg
none SetP %I p n
%I t
[ -0.400828 0 -0 0.400828 277.837 326.944 ] concat
%I 8
222 369
231 341
258 314
295 296
350 296
387 314
414 342
427 371
8 BSpl
%I 1
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-240-*
Times-Bold 24 SetF
%I t
[ 1.53918 0 0 1.92398 124.842 539.176 ] concat
%I
[
(Sun Microsystems)
(Laboratories, Inc.)
] Text
End

End %I eop

showpage

%%Trailer

end

%%EndDocument
FMENDEPSF
81 270 729 738 R
V
1 48 Q
0 X
-1.7 (Modula-3 at Sun Micr) 86.19 706 P
-1.7 (osystems) 537.45 706 P
(Laboratories) 271.71 652 T
0 24 Q
(The V) 126 602 T
(antage Project at SML is investigating structuring and) 183.95 602 T
(reliability mechanisms for very lar) 126 576 T
(ge distributed object) 457.33 576 T
(systems.) 126 550 T
(Modula-3 is the principal implementation language for the) 126 488 T
(project.) 126 462 T
(The project has built several protocols on top of Network) 126 400 T
(Objects) 126 374 T
(The project has built \050is building\051 some tools for Network) 126 322 T
(Objects) 126 296 T
FMENDPAGE
%%EndPage: "1" 2
%%Page: "2" 2
612 792 1 FMBEGINPAGE
72 744 720 756 R
7 X
0 K
V
0 12 Q
0 X
(94-0425) 680.03 748 T
77 186 775 209 R
7 X
V
0 X
(Modula-3 at SML) 357.69 201 T
(2) 758 201 T
43.56 216 756 756 18 RR
2 H
0 Z
N
90 198 279 234 R
7 X
V
0.5 H
N
0 22 386 476 541 189 45 90 207 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: idraw
%%DocumentFonts: Times-Bold
%%Pages: 1
%%BoundingBox: 22 386 476 541
%%EndComments

/arrowHeight 9 def
/arrowWidth 5 def

/IdrawDict 51 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Times-Bold reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def

%%EndProlog

%%BeginIdrawPrologue
/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

%%EndIdrawPrologue

%I Idraw 10 Grid 9.21942e-41 9.21942e-41 

%%Page: 1 1

Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.866142 0 0 0.866142 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 13.4946 -359.625 ] concat

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0729673 -0.0729673 -0.0729673 0.0729673 85.0216 843.277 ] concat
%I
319 495 73 73 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0688227 -0.0688227 -0.0688227 0.0688227 82.13 842.974 ] concat
%I
315 506 11 11 Elli
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0688227 -0.0688227 -0.0688227 0.0688227 89.6044 850.641 ] concat
%I
343 492 425 515 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0650689 -0.0650689 -0.0688227 0.0688227 89.0075 848.805 ] concat
%I
161 525 434 591 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0650689 -0.0650689 -0.0688227 0.0688227 95.1184 842.694 ] concat
%I
161 525 434 591 Rect
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0729673 0.0729673 -0.0729673 0.0729673 62.8122 796.842 ] concat
%I
319 495 73 73 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0688227 0.0688227 -0.0688227 0.0688227 63.115 799.734 ] concat
%I
315 506 11 11 Elli
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0688227 0.0688227 -0.0688227 0.0688227 55.4484 792.259 ] concat
%I
343 492 425 515 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0650689 0.0650689 -0.0688227 0.0688227 57.2841 792.856 ] concat
%I
161 525 434 591 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0650689 0.0650689 -0.0688227 0.0688227 63.395 786.745 ] concat
%I
161 525 434 591 Rect
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0729673 -0.0729673 -0.0729673 0.0729673 133.335 843.002 ] concat
%I
319 495 73 73 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0688227 -0.0688227 -0.0688227 0.0688227 130.444 842.699 ] concat
%I
315 506 11 11 Elli
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0688227 -0.0688227 -0.0688227 0.0688227 137.918 850.366 ] concat
%I
343 492 425 515 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0650689 -0.0650689 -0.0688227 0.0688227 137.321 848.53 ] concat
%I
161 525 434 591 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0650689 -0.0650689 -0.0688227 0.0688227 143.432 842.419 ] concat
%I
161 525 434 591 Rect
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0729673 0.0729673 -0.0729673 0.0729673 111.126 796.567 ] concat
%I
319 495 73 73 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0688227 0.0688227 -0.0688227 0.0688227 111.429 799.459 ] concat
%I
315 506 11 11 Elli
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0688227 0.0688227 -0.0688227 0.0688227 103.762 791.984 ] concat
%I
343 492 425 515 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0650689 0.0650689 -0.0688227 0.0688227 105.598 792.581 ] concat
%I
161 525 434 591 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0650689 0.0650689 -0.0688227 0.0688227 111.709 786.47 ] concat
%I
161 525 434 591 Rect
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0729673 0.0729673 0.0729673 0.0729673 49.2746 833.544 ] concat
%I
319 495 73 73 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0688227 0.0688227 0.0688227 0.0688227 48.9717 836.436 ] concat
%I
315 506 11 11 Elli
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0688227 0.0688227 0.0688227 0.0688227 56.6383 828.962 ] concat
%I
343 492 425 515 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0650689 0.0650689 0.0688227 0.0688227 54.8026 829.559 ] concat
%I
161 525 434 591 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0650689 0.0650689 0.0688227 0.0688227 48.6917 823.448 ] concat
%I
161 525 434 591 Rect
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0729673 -0.0729673 0.0729673 0.0729673 2.83955 855.754 ] concat
%I
319 495 73 73 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0688227 -0.0688227 0.0688227 0.0688227 5.73122 855.451 ] concat
%I
315 506 11 11 Elli
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0688227 -0.0688227 0.0688227 0.0688227 -1.74321 863.118 ] concat
%I
343 492 425 515 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0650689 -0.0650689 0.0688227 0.0688227 -1.14633 861.282 ] concat
%I
161 525 434 591 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0650689 -0.0650689 0.0688227 0.0688227 -7.25723 855.171 ] concat
%I
161 525 434 591 Rect
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0729673 0.0729673 0.0729673 0.0729673 48.9993 784.956 ] concat
%I
319 495 73 73 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0688227 0.0688227 0.0688227 0.0688227 48.6964 787.847 ] concat
%I
315 506 11 11 Elli
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0688227 0.0688227 0.0688227 0.0688227 56.363 780.373 ] concat
%I
343 492 425 515 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0650689 0.0650689 0.0688227 0.0688227 54.5273 780.97 ] concat
%I
161 525 434 591 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0650689 0.0650689 0.0688227 0.0688227 48.4164 774.859 ] concat
%I
161 525 434 591 Rect
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0729673 -0.0729673 0.0729673 0.0729673 2.56425 807.165 ] concat
%I
319 495 73 73 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0688227 -0.0688227 0.0688227 0.0688227 5.45592 806.862 ] concat
%I
315 506 11 11 Elli
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0688227 -0.0688227 0.0688227 0.0688227 -2.01851 814.529 ] concat
%I
343 492 425 515 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0650689 -0.0650689 0.0688227 0.0688227 -1.42163 812.693 ] concat
%I
161 525 434 591 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0650689 -0.0650689 0.0688227 0.0688227 -7.53253 806.582 ] concat
%I
161 525 434 591 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ -0.649342 0 0 0.649342 567.795 229.851 ] concat

Begin %I CBSpl
none SetB %I b n
%I cfg Black
0 0 0 SetCFg
%I cbg Yellow
1 1 0 SetCBg
%I p
1 SetP
%I t
[ 0.997933 -0 -0 0.997933 -0 71.8512 ] concat
%I 52
188 531
183 526
171 494
152 488
151 491
132 500
108 534
108 534
109 499
100 469
88 460
66 456
30 470
30 470
38 458
70 422
75 409
65 393
42 369
42 369
66 370
87 366
100 351
90 305
87 305
120 339
144 339
160 322
179 301
178 302
177 332
189 356
216 369
233 364
389 318
389 320
243 371
228 390
236 400
246 416
636 420
636 421
241 430
222 438
214 451
226 471
236 498
236 498
220 488
191 482
185 496
183 526
52 CBSpl
End

Begin %I Elli
none SetB %I b n
%I cfg Black
0 0 0 SetCFg
%I cbg Black
0 0 0 SetCBg
%I p
1 SetP
%I t
[ -0.400828 0 -0 0.400828 279.24 326.944 ] concat
%I
268 448 7 25 Elli
End

Begin %I Elli
none SetB %I b n
%I cfg Black
0 0 0 SetCFg
%I cbg Black
0 0 0 SetCBg
%I p
1 SetP
%I t
[ -0.400828 0 -0 0.400828 231.14 326.543 ] concat
%I
268 448 7 25 Elli
End

Begin %I Rect
none SetB %I b n
%I cfg Yellow
1 1 0 SetCFg
%I cbg Yellow
1 1 0 SetCBg
%I p
1 SetP
%I t
[ -0.997933 0 0 0.997933 665.316 71.8513 ] concat
%I
487 348 566 391 Rect
End

Begin %I Elli
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg Yellow
1 1 0 SetCBg
none SetP %I p n
%I t
[ -0.400828 0 -0 0.400828 279.641 326.944 ] concat
%I
329 395 166 166 Elli
End

Begin %I BSpl
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg Black
0 0 0 SetCBg
none SetP %I p n
%I t
[ -0.400828 0 -0 0.400828 277.837 326.944 ] concat
%I 8
222 369
231 341
258 314
295 296
350 296
387 314
414 342
427 371
8 BSpl
%I 1
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-240-*
Times-Bold 24 SetF
%I t
[ 1.53918 0 0 1.92398 124.842 539.176 ] concat
%I
[
(Sun Microsystems)
(Laboratories, Inc.)
] Text
End

End %I eop

showpage

%%Trailer

end

%%EndDocument
FMENDEPSF
81 270 729 738 R
V
1 48 Q
0 X
(Pr) 309.48 706 T
(otocols) 359.24 706 T
0 24 Q
(T) 126 656 T
(ransaction management) 139.82 656 T
(\245) 162 620 T
(A set of interfaces and an implementation for creating,) 189 620 T
(committing, aborting distributed transactions.) 189 594 T
(Event distribution) 126 522 T
(\245) 162 486 T
-1.81 (A set of interfaces and an implementation for lightweight) 189 486 P
(event interest registration and noti\336cation.) 189 460 T
(Activation) 126 424 T
(\245) 162 388 T
(\322inetd\323 for network objects.) 189 388 T
FMENDPAGE
%%EndPage: "2" 3
%%Page: "3" 3
612 792 1 FMBEGINPAGE
72 744 720 756 R
7 X
0 K
V
0 12 Q
0 X
(94-0425) 680.03 748 T
77 186 775 209 R
7 X
V
0 X
(Modula-3 at SML) 357.69 201 T
(3) 758 201 T
43.56 216 756 756 18 RR
2 H
0 Z
N
90 198 279 234 R
7 X
V
0.5 H
N
0 22 386 476 541 189 45 90 207 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: idraw
%%DocumentFonts: Times-Bold
%%Pages: 1
%%BoundingBox: 22 386 476 541
%%EndComments

/arrowHeight 9 def
/arrowWidth 5 def

/IdrawDict 51 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Times-Bold reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def

%%EndProlog

%%BeginIdrawPrologue
/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

%%EndIdrawPrologue

%I Idraw 10 Grid 9.21942e-41 9.21942e-41 

%%Page: 1 1

Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.866142 0 0 0.866142 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 13.4946 -359.625 ] concat

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0729673 -0.0729673 -0.0729673 0.0729673 85.0216 843.277 ] concat
%I
319 495 73 73 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0688227 -0.0688227 -0.0688227 0.0688227 82.13 842.974 ] concat
%I
315 506 11 11 Elli
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0688227 -0.0688227 -0.0688227 0.0688227 89.6044 850.641 ] concat
%I
343 492 425 515 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0650689 -0.0650689 -0.0688227 0.0688227 89.0075 848.805 ] concat
%I
161 525 434 591 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0650689 -0.0650689 -0.0688227 0.0688227 95.1184 842.694 ] concat
%I
161 525 434 591 Rect
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0729673 0.0729673 -0.0729673 0.0729673 62.8122 796.842 ] concat
%I
319 495 73 73 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0688227 0.0688227 -0.0688227 0.0688227 63.115 799.734 ] concat
%I
315 506 11 11 Elli
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0688227 0.0688227 -0.0688227 0.0688227 55.4484 792.259 ] concat
%I
343 492 425 515 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0650689 0.0650689 -0.0688227 0.0688227 57.2841 792.856 ] concat
%I
161 525 434 591 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0650689 0.0650689 -0.0688227 0.0688227 63.395 786.745 ] concat
%I
161 525 434 591 Rect
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0729673 -0.0729673 -0.0729673 0.0729673 133.335 843.002 ] concat
%I
319 495 73 73 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0688227 -0.0688227 -0.0688227 0.0688227 130.444 842.699 ] concat
%I
315 506 11 11 Elli
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0688227 -0.0688227 -0.0688227 0.0688227 137.918 850.366 ] concat
%I
343 492 425 515 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0650689 -0.0650689 -0.0688227 0.0688227 137.321 848.53 ] concat
%I
161 525 434 591 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0650689 -0.0650689 -0.0688227 0.0688227 143.432 842.419 ] concat
%I
161 525 434 591 Rect
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0729673 0.0729673 -0.0729673 0.0729673 111.126 796.567 ] concat
%I
319 495 73 73 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0688227 0.0688227 -0.0688227 0.0688227 111.429 799.459 ] concat
%I
315 506 11 11 Elli
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0688227 0.0688227 -0.0688227 0.0688227 103.762 791.984 ] concat
%I
343 492 425 515 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0650689 0.0650689 -0.0688227 0.0688227 105.598 792.581 ] concat
%I
161 525 434 591 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0650689 0.0650689 -0.0688227 0.0688227 111.709 786.47 ] concat
%I
161 525 434 591 Rect
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0729673 0.0729673 0.0729673 0.0729673 49.2746 833.544 ] concat
%I
319 495 73 73 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0688227 0.0688227 0.0688227 0.0688227 48.9717 836.436 ] concat
%I
315 506 11 11 Elli
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0688227 0.0688227 0.0688227 0.0688227 56.6383 828.962 ] concat
%I
343 492 425 515 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0650689 0.0650689 0.0688227 0.0688227 54.8026 829.559 ] concat
%I
161 525 434 591 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0650689 0.0650689 0.0688227 0.0688227 48.6917 823.448 ] concat
%I
161 525 434 591 Rect
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0729673 -0.0729673 0.0729673 0.0729673 2.83955 855.754 ] concat
%I
319 495 73 73 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0688227 -0.0688227 0.0688227 0.0688227 5.73122 855.451 ] concat
%I
315 506 11 11 Elli
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0688227 -0.0688227 0.0688227 0.0688227 -1.74321 863.118 ] concat
%I
343 492 425 515 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0650689 -0.0650689 0.0688227 0.0688227 -1.14633 861.282 ] concat
%I
161 525 434 591 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0650689 -0.0650689 0.0688227 0.0688227 -7.25723 855.171 ] concat
%I
161 525 434 591 Rect
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0729673 0.0729673 0.0729673 0.0729673 48.9993 784.956 ] concat
%I
319 495 73 73 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0688227 0.0688227 0.0688227 0.0688227 48.6964 787.847 ] concat
%I
315 506 11 11 Elli
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0688227 0.0688227 0.0688227 0.0688227 56.363 780.373 ] concat
%I
343 492 425 515 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0650689 0.0650689 0.0688227 0.0688227 54.5273 780.97 ] concat
%I
161 525 434 591 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0650689 0.0650689 0.0688227 0.0688227 48.4164 774.859 ] concat
%I
161 525 434 591 Rect
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0729673 -0.0729673 0.0729673 0.0729673 2.56425 807.165 ] concat
%I
319 495 73 73 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0688227 -0.0688227 0.0688227 0.0688227 5.45592 806.862 ] concat
%I
315 506 11 11 Elli
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0688227 -0.0688227 0.0688227 0.0688227 -2.01851 814.529 ] concat
%I
343 492 425 515 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0650689 -0.0650689 0.0688227 0.0688227 -1.42163 812.693 ] concat
%I
161 525 434 591 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0650689 -0.0650689 0.0688227 0.0688227 -7.53253 806.582 ] concat
%I
161 525 434 591 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ -0.649342 0 0 0.649342 567.795 229.851 ] concat

Begin %I CBSpl
none SetB %I b n
%I cfg Black
0 0 0 SetCFg
%I cbg Yellow
1 1 0 SetCBg
%I p
1 SetP
%I t
[ 0.997933 -0 -0 0.997933 -0 71.8512 ] concat
%I 52
188 531
183 526
171 494
152 488
151 491
132 500
108 534
108 534
109 499
100 469
88 460
66 456
30 470
30 470
38 458
70 422
75 409
65 393
42 369
42 369
66 370
87 366
100 351
90 305
87 305
120 339
144 339
160 322
179 301
178 302
177 332
189 356
216 369
233 364
389 318
389 320
243 371
228 390
236 400
246 416
636 420
636 421
241 430
222 438
214 451
226 471
236 498
236 498
220 488
191 482
185 496
183 526
52 CBSpl
End

Begin %I Elli
none SetB %I b n
%I cfg Black
0 0 0 SetCFg
%I cbg Black
0 0 0 SetCBg
%I p
1 SetP
%I t
[ -0.400828 0 -0 0.400828 279.24 326.944 ] concat
%I
268 448 7 25 Elli
End

Begin %I Elli
none SetB %I b n
%I cfg Black
0 0 0 SetCFg
%I cbg Black
0 0 0 SetCBg
%I p
1 SetP
%I t
[ -0.400828 0 -0 0.400828 231.14 326.543 ] concat
%I
268 448 7 25 Elli
End

Begin %I Rect
none SetB %I b n
%I cfg Yellow
1 1 0 SetCFg
%I cbg Yellow
1 1 0 SetCBg
%I p
1 SetP
%I t
[ -0.997933 0 0 0.997933 665.316 71.8513 ] concat
%I
487 348 566 391 Rect
End

Begin %I Elli
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg Yellow
1 1 0 SetCBg
none SetP %I p n
%I t
[ -0.400828 0 -0 0.400828 279.641 326.944 ] concat
%I
329 395 166 166 Elli
End

Begin %I BSpl
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg Black
0 0 0 SetCBg
none SetP %I p n
%I t
[ -0.400828 0 -0 0.400828 277.837 326.944 ] concat
%I 8
222 369
231 341
258 314
295 296
350 296
387 314
414 342
427 371
8 BSpl
%I 1
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-240-*
Times-Bold 24 SetF
%I t
[ 1.53918 0 0 1.92398 124.842 539.176 ] concat
%I
[
(Sun Microsystems)
(Laboratories, Inc.)
] Text
End

End %I eop

showpage

%%Trailer

end

%%EndDocument
FMENDEPSF
81 270 729 738 R
V
1 48 Q
0 X
(T) 351.2 706 T
(ools) 378.8 706 T
0 24 Q
(IDLNO) 126 656 T
(\245) 162 620 T
(Parses OMG IDL \050Interface De\336nition Language\051) 189 620 T
(descriptions, generates M3 Network Object\325) 189 594 T
(s interfaces) 613.35 594 T
(CM3) 126 532 T
(\245) 162 496 T
(C callin\325) 189 496 T
(s and callouts to/from M3 \050Network\051 objects) 270.96 496 T
FMENDPAGE
%%EndPage: "3" 4
%%Page: "4" 4
612 792 1 FMBEGINPAGE
72 744 720 756 R
7 X
0 K
V
0 12 Q
0 X
(94-0425) 680.03 748 T
77 186 775 209 R
7 X
V
0 X
(Modula-3 at SML) 357.69 201 T
(4) 758 201 T
43.56 216 756 756 18 RR
2 H
0 Z
N
90 198 279 234 R
7 X
V
0.5 H
N
0 22 386 476 541 189 45 90 207 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: idraw
%%DocumentFonts: Times-Bold
%%Pages: 1
%%BoundingBox: 22 386 476 541
%%EndComments

/arrowHeight 9 def
/arrowWidth 5 def

/IdrawDict 51 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Times-Bold reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def

%%EndProlog

%%BeginIdrawPrologue
/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

%%EndIdrawPrologue

%I Idraw 10 Grid 9.21942e-41 9.21942e-41 

%%Page: 1 1

Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.866142 0 0 0.866142 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 13.4946 -359.625 ] concat

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0729673 -0.0729673 -0.0729673 0.0729673 85.0216 843.277 ] concat
%I
319 495 73 73 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0688227 -0.0688227 -0.0688227 0.0688227 82.13 842.974 ] concat
%I
315 506 11 11 Elli
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0688227 -0.0688227 -0.0688227 0.0688227 89.6044 850.641 ] concat
%I
343 492 425 515 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0650689 -0.0650689 -0.0688227 0.0688227 89.0075 848.805 ] concat
%I
161 525 434 591 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0650689 -0.0650689 -0.0688227 0.0688227 95.1184 842.694 ] concat
%I
161 525 434 591 Rect
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0729673 0.0729673 -0.0729673 0.0729673 62.8122 796.842 ] concat
%I
319 495 73 73 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0688227 0.0688227 -0.0688227 0.0688227 63.115 799.734 ] concat
%I
315 506 11 11 Elli
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0688227 0.0688227 -0.0688227 0.0688227 55.4484 792.259 ] concat
%I
343 492 425 515 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0650689 0.0650689 -0.0688227 0.0688227 57.2841 792.856 ] concat
%I
161 525 434 591 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0650689 0.0650689 -0.0688227 0.0688227 63.395 786.745 ] concat
%I
161 525 434 591 Rect
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0729673 -0.0729673 -0.0729673 0.0729673 133.335 843.002 ] concat
%I
319 495 73 73 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0688227 -0.0688227 -0.0688227 0.0688227 130.444 842.699 ] concat
%I
315 506 11 11 Elli
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0688227 -0.0688227 -0.0688227 0.0688227 137.918 850.366 ] concat
%I
343 492 425 515 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0650689 -0.0650689 -0.0688227 0.0688227 137.321 848.53 ] concat
%I
161 525 434 591 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0650689 -0.0650689 -0.0688227 0.0688227 143.432 842.419 ] concat
%I
161 525 434 591 Rect
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0729673 0.0729673 -0.0729673 0.0729673 111.126 796.567 ] concat
%I
319 495 73 73 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0688227 0.0688227 -0.0688227 0.0688227 111.429 799.459 ] concat
%I
315 506 11 11 Elli
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0688227 0.0688227 -0.0688227 0.0688227 103.762 791.984 ] concat
%I
343 492 425 515 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0650689 0.0650689 -0.0688227 0.0688227 105.598 792.581 ] concat
%I
161 525 434 591 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0650689 0.0650689 -0.0688227 0.0688227 111.709 786.47 ] concat
%I
161 525 434 591 Rect
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0729673 0.0729673 0.0729673 0.0729673 49.2746 833.544 ] concat
%I
319 495 73 73 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0688227 0.0688227 0.0688227 0.0688227 48.9717 836.436 ] concat
%I
315 506 11 11 Elli
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0688227 0.0688227 0.0688227 0.0688227 56.6383 828.962 ] concat
%I
343 492 425 515 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0650689 0.0650689 0.0688227 0.0688227 54.8026 829.559 ] concat
%I
161 525 434 591 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0650689 0.0650689 0.0688227 0.0688227 48.6917 823.448 ] concat
%I
161 525 434 591 Rect
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0729673 -0.0729673 0.0729673 0.0729673 2.83955 855.754 ] concat
%I
319 495 73 73 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0688227 -0.0688227 0.0688227 0.0688227 5.73122 855.451 ] concat
%I
315 506 11 11 Elli
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0688227 -0.0688227 0.0688227 0.0688227 -1.74321 863.118 ] concat
%I
343 492 425 515 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0650689 -0.0650689 0.0688227 0.0688227 -1.14633 861.282 ] concat
%I
161 525 434 591 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0650689 -0.0650689 0.0688227 0.0688227 -7.25723 855.171 ] concat
%I
161 525 434 591 Rect
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0729673 0.0729673 0.0729673 0.0729673 48.9993 784.956 ] concat
%I
319 495 73 73 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0688227 0.0688227 0.0688227 0.0688227 48.6964 787.847 ] concat
%I
315 506 11 11 Elli
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0688227 0.0688227 0.0688227 0.0688227 56.363 780.373 ] concat
%I
343 492 425 515 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0650689 0.0650689 0.0688227 0.0688227 54.5273 780.97 ] concat
%I
161 525 434 591 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0650689 0.0650689 0.0688227 0.0688227 48.4164 774.859 ] concat
%I
161 525 434 591 Rect
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0729673 -0.0729673 0.0729673 0.0729673 2.56425 807.165 ] concat
%I
319 495 73 73 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0688227 -0.0688227 0.0688227 0.0688227 5.45592 806.862 ] concat
%I
315 506 11 11 Elli
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0688227 -0.0688227 0.0688227 0.0688227 -2.01851 814.529 ] concat
%I
343 492 425 515 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0650689 -0.0650689 0.0688227 0.0688227 -1.42163 812.693 ] concat
%I
161 525 434 591 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0650689 -0.0650689 0.0688227 0.0688227 -7.53253 806.582 ] concat
%I
161 525 434 591 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ -0.649342 0 0 0.649342 567.795 229.851 ] concat

Begin %I CBSpl
none SetB %I b n
%I cfg Black
0 0 0 SetCFg
%I cbg Yellow
1 1 0 SetCBg
%I p
1 SetP
%I t
[ 0.997933 -0 -0 0.997933 -0 71.8512 ] concat
%I 52
188 531
183 526
171 494
152 488
151 491
132 500
108 534
108 534
109 499
100 469
88 460
66 456
30 470
30 470
38 458
70 422
75 409
65 393
42 369
42 369
66 370
87 366
100 351
90 305
87 305
120 339
144 339
160 322
179 301
178 302
177 332
189 356
216 369
233 364
389 318
389 320
243 371
228 390
236 400
246 416
636 420
636 421
241 430
222 438
214 451
226 471
236 498
236 498
220 488
191 482
185 496
183 526
52 CBSpl
End

Begin %I Elli
none SetB %I b n
%I cfg Black
0 0 0 SetCFg
%I cbg Black
0 0 0 SetCBg
%I p
1 SetP
%I t
[ -0.400828 0 -0 0.400828 279.24 326.944 ] concat
%I
268 448 7 25 Elli
End

Begin %I Elli
none SetB %I b n
%I cfg Black
0 0 0 SetCFg
%I cbg Black
0 0 0 SetCBg
%I p
1 SetP
%I t
[ -0.400828 0 -0 0.400828 231.14 326.543 ] concat
%I
268 448 7 25 Elli
End

Begin %I Rect
none SetB %I b n
%I cfg Yellow
1 1 0 SetCFg
%I cbg Yellow
1 1 0 SetCBg
%I p
1 SetP
%I t
[ -0.997933 0 0 0.997933 665.316 71.8513 ] concat
%I
487 348 566 391 Rect
End

Begin %I Elli
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg Yellow
1 1 0 SetCBg
none SetP %I p n
%I t
[ -0.400828 0 -0 0.400828 279.641 326.944 ] concat
%I
329 395 166 166 Elli
End

Begin %I BSpl
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg Black
0 0 0 SetCBg
none SetP %I p n
%I t
[ -0.400828 0 -0 0.400828 277.837 326.944 ] concat
%I 8
222 369
231 341
258 314
295 296
350 296
387 314
414 342
427 371
8 BSpl
%I 1
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-240-*
Times-Bold 24 SetF
%I t
[ 1.53918 0 0 1.92398 124.842 539.176 ] concat
%I
[
(Sun Microsystems)
(Laboratories, Inc.)
] Text
End

End %I eop

showpage

%%Trailer

end

%%EndDocument
FMENDEPSF
81 270 729 738 R
V
1 48 Q
0 X
(Experiences Developing with) 109.08 706 T
(M3) 370.35 652 T
0 24 Q
(Uniformly positive!) 126 602 T
(Language and libraries make it possible for us to develop) 126 550 T
(sophisticated protocols with very little ef) 126 524 T
(fort:) 517.99 524 T
(\245) 162 488 T
(T) 189 488 T
(ransaction manager: ~3500 lines) 202.82 488 T
(\245) 162 452 T
(Event system: ~1000 lines) 189 452 T
(\245) 162 416 T
(Activation system: ~600 lines) 189 416 T
(These systems made heavy use of M3 generics, tables,) 126 354 T
(sequences, threads, pickles, and OS independent interfaces) 126 328 T
FMENDPAGE
%%EndPage: "4" 5
%%Page: "5" 5
612 792 1 FMBEGINPAGE
72 744 720 756 R
7 X
0 K
V
0 12 Q
0 X
(94-0425) 680.03 748 T
77 186 775 209 R
7 X
V
0 X
(Modula-3 at SML) 357.69 201 T
(5) 758 201 T
43.56 216 756 756 18 RR
2 H
0 Z
N
90 198 279 234 R
7 X
V
0.5 H
N
0 22 386 476 541 189 45 90 207 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: idraw
%%DocumentFonts: Times-Bold
%%Pages: 1
%%BoundingBox: 22 386 476 541
%%EndComments

/arrowHeight 9 def
/arrowWidth 5 def

/IdrawDict 51 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Times-Bold reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def

%%EndProlog

%%BeginIdrawPrologue
/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

%%EndIdrawPrologue

%I Idraw 10 Grid 9.21942e-41 9.21942e-41 

%%Page: 1 1

Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.866142 0 0 0.866142 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 13.4946 -359.625 ] concat

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0729673 -0.0729673 -0.0729673 0.0729673 85.0216 843.277 ] concat
%I
319 495 73 73 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0688227 -0.0688227 -0.0688227 0.0688227 82.13 842.974 ] concat
%I
315 506 11 11 Elli
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0688227 -0.0688227 -0.0688227 0.0688227 89.6044 850.641 ] concat
%I
343 492 425 515 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0650689 -0.0650689 -0.0688227 0.0688227 89.0075 848.805 ] concat
%I
161 525 434 591 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0650689 -0.0650689 -0.0688227 0.0688227 95.1184 842.694 ] concat
%I
161 525 434 591 Rect
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0729673 0.0729673 -0.0729673 0.0729673 62.8122 796.842 ] concat
%I
319 495 73 73 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0688227 0.0688227 -0.0688227 0.0688227 63.115 799.734 ] concat
%I
315 506 11 11 Elli
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0688227 0.0688227 -0.0688227 0.0688227 55.4484 792.259 ] concat
%I
343 492 425 515 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0650689 0.0650689 -0.0688227 0.0688227 57.2841 792.856 ] concat
%I
161 525 434 591 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0650689 0.0650689 -0.0688227 0.0688227 63.395 786.745 ] concat
%I
161 525 434 591 Rect
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0729673 -0.0729673 -0.0729673 0.0729673 133.335 843.002 ] concat
%I
319 495 73 73 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0688227 -0.0688227 -0.0688227 0.0688227 130.444 842.699 ] concat
%I
315 506 11 11 Elli
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0688227 -0.0688227 -0.0688227 0.0688227 137.918 850.366 ] concat
%I
343 492 425 515 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0650689 -0.0650689 -0.0688227 0.0688227 137.321 848.53 ] concat
%I
161 525 434 591 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0650689 -0.0650689 -0.0688227 0.0688227 143.432 842.419 ] concat
%I
161 525 434 591 Rect
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0729673 0.0729673 -0.0729673 0.0729673 111.126 796.567 ] concat
%I
319 495 73 73 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0688227 0.0688227 -0.0688227 0.0688227 111.429 799.459 ] concat
%I
315 506 11 11 Elli
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0688227 0.0688227 -0.0688227 0.0688227 103.762 791.984 ] concat
%I
343 492 425 515 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0650689 0.0650689 -0.0688227 0.0688227 105.598 792.581 ] concat
%I
161 525 434 591 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0650689 0.0650689 -0.0688227 0.0688227 111.709 786.47 ] concat
%I
161 525 434 591 Rect
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0729673 0.0729673 0.0729673 0.0729673 49.2746 833.544 ] concat
%I
319 495 73 73 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0688227 0.0688227 0.0688227 0.0688227 48.9717 836.436 ] concat
%I
315 506 11 11 Elli
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0688227 0.0688227 0.0688227 0.0688227 56.6383 828.962 ] concat
%I
343 492 425 515 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0650689 0.0650689 0.0688227 0.0688227 54.8026 829.559 ] concat
%I
161 525 434 591 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0650689 0.0650689 0.0688227 0.0688227 48.6917 823.448 ] concat
%I
161 525 434 591 Rect
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0729673 -0.0729673 0.0729673 0.0729673 2.83955 855.754 ] concat
%I
319 495 73 73 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0688227 -0.0688227 0.0688227 0.0688227 5.73122 855.451 ] concat
%I
315 506 11 11 Elli
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0688227 -0.0688227 0.0688227 0.0688227 -1.74321 863.118 ] concat
%I
343 492 425 515 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0650689 -0.0650689 0.0688227 0.0688227 -1.14633 861.282 ] concat
%I
161 525 434 591 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0650689 -0.0650689 0.0688227 0.0688227 -7.25723 855.171 ] concat
%I
161 525 434 591 Rect
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0729673 0.0729673 0.0729673 0.0729673 48.9993 784.956 ] concat
%I
319 495 73 73 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0688227 0.0688227 0.0688227 0.0688227 48.6964 787.847 ] concat
%I
315 506 11 11 Elli
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0688227 0.0688227 0.0688227 0.0688227 56.363 780.373 ] concat
%I
343 492 425 515 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0650689 0.0650689 0.0688227 0.0688227 54.5273 780.97 ] concat
%I
161 525 434 591 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0650689 0.0650689 0.0688227 0.0688227 48.4164 774.859 ] concat
%I
161 525 434 591 Rect
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0729673 -0.0729673 0.0729673 0.0729673 2.56425 807.165 ] concat
%I
319 495 73 73 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0688227 -0.0688227 0.0688227 0.0688227 5.45592 806.862 ] concat
%I
315 506 11 11 Elli
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0688227 -0.0688227 0.0688227 0.0688227 -2.01851 814.529 ] concat
%I
343 492 425 515 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0650689 -0.0650689 0.0688227 0.0688227 -1.42163 812.693 ] concat
%I
161 525 434 591 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0650689 -0.0650689 0.0688227 0.0688227 -7.53253 806.582 ] concat
%I
161 525 434 591 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ -0.649342 0 0 0.649342 567.795 229.851 ] concat

Begin %I CBSpl
none SetB %I b n
%I cfg Black
0 0 0 SetCFg
%I cbg Yellow
1 1 0 SetCBg
%I p
1 SetP
%I t
[ 0.997933 -0 -0 0.997933 -0 71.8512 ] concat
%I 52
188 531
183 526
171 494
152 488
151 491
132 500
108 534
108 534
109 499
100 469
88 460
66 456
30 470
30 470
38 458
70 422
75 409
65 393
42 369
42 369
66 370
87 366
100 351
90 305
87 305
120 339
144 339
160 322
179 301
178 302
177 332
189 356
216 369
233 364
389 318
389 320
243 371
228 390
236 400
246 416
636 420
636 421
241 430
222 438
214 451
226 471
236 498
236 498
220 488
191 482
185 496
183 526
52 CBSpl
End

Begin %I Elli
none SetB %I b n
%I cfg Black
0 0 0 SetCFg
%I cbg Black
0 0 0 SetCBg
%I p
1 SetP
%I t
[ -0.400828 0 -0 0.400828 279.24 326.944 ] concat
%I
268 448 7 25 Elli
End

Begin %I Elli
none SetB %I b n
%I cfg Black
0 0 0 SetCFg
%I cbg Black
0 0 0 SetCBg
%I p
1 SetP
%I t
[ -0.400828 0 -0 0.400828 231.14 326.543 ] concat
%I
268 448 7 25 Elli
End

Begin %I Rect
none SetB %I b n
%I cfg Yellow
1 1 0 SetCFg
%I cbg Yellow
1 1 0 SetCBg
%I p
1 SetP
%I t
[ -0.997933 0 0 0.997933 665.316 71.8513 ] concat
%I
487 348 566 391 Rect
End

Begin %I Elli
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg Yellow
1 1 0 SetCBg
none SetP %I p n
%I t
[ -0.400828 0 -0 0.400828 279.641 326.944 ] concat
%I
329 395 166 166 Elli
End

Begin %I BSpl
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg Black
0 0 0 SetCBg
none SetP %I p n
%I t
[ -0.400828 0 -0 0.400828 277.837 326.944 ] concat
%I 8
222 369
231 341
258 314
295 296
350 296
387 314
414 342
427 371
8 BSpl
%I 1
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-240-*
Times-Bold 24 SetF
%I t
[ 1.53918 0 0 1.92398 124.842 539.176 ] concat
%I
[
(Sun Microsystems)
(Laboratories, Inc.)
] Text
End

End %I eop

showpage

%%Trailer

end

%%EndDocument
FMENDEPSF
81 270 729 738 R
V
1 48 Q
0 X
(W) 216.57 706 T
(orks in Pr) 261.92 706 T
(ogr) 466.35 706 T
(ess) 534.79 706 T
0 24 Q
(Native Solaris-2 Threads for M3) 126 656 T
(\245) 162 620 T
-1 (Replace portable threads implementation with one using) 189 620 P
(native Solaris-2 threads) 189 594 T
(\245) 162 558 T
(Allows us to take advantage of multiprocessors) 189 558 T
(A) 126 496 T
(TMObjects) 140.66 496 T
(\245) 162 460 T
(Raw A) 189 460 T
(TM transport for Network Objects) 253.62 460 T
(\245) 162 424 T
-1.12 (An experiment in living directly on A) 189 424 P
-1.12 (TM-style networks) 542.04 424 P
FMENDPAGE
%%EndPage: "5" 6
%%Page: "6" 6
612 792 1 FMBEGINPAGE
72 744 720 756 R
7 X
0 K
V
0 12 Q
0 X
(94-0425) 680.03 748 T
77 186 775 209 R
7 X
V
0 X
(Modula-3 at SML) 357.69 201 T
(6) 758 201 T
43.56 216 756 756 18 RR
2 H
0 Z
N
90 198 279 234 R
7 X
V
0.5 H
N
0 22 386 476 541 189 45 90 207 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: idraw
%%DocumentFonts: Times-Bold
%%Pages: 1
%%BoundingBox: 22 386 476 541
%%EndComments

/arrowHeight 9 def
/arrowWidth 5 def

/IdrawDict 51 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Times-Bold reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def

%%EndProlog

%%BeginIdrawPrologue
/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

%%EndIdrawPrologue

%I Idraw 10 Grid 9.21942e-41 9.21942e-41 

%%Page: 1 1

Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.866142 0 0 0.866142 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 13.4946 -359.625 ] concat

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0729673 -0.0729673 -0.0729673 0.0729673 85.0216 843.277 ] concat
%I
319 495 73 73 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0688227 -0.0688227 -0.0688227 0.0688227 82.13 842.974 ] concat
%I
315 506 11 11 Elli
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0688227 -0.0688227 -0.0688227 0.0688227 89.6044 850.641 ] concat
%I
343 492 425 515 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0650689 -0.0650689 -0.0688227 0.0688227 89.0075 848.805 ] concat
%I
161 525 434 591 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0650689 -0.0650689 -0.0688227 0.0688227 95.1184 842.694 ] concat
%I
161 525 434 591 Rect
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0729673 0.0729673 -0.0729673 0.0729673 62.8122 796.842 ] concat
%I
319 495 73 73 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0688227 0.0688227 -0.0688227 0.0688227 63.115 799.734 ] concat
%I
315 506 11 11 Elli
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0688227 0.0688227 -0.0688227 0.0688227 55.4484 792.259 ] concat
%I
343 492 425 515 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0650689 0.0650689 -0.0688227 0.0688227 57.2841 792.856 ] concat
%I
161 525 434 591 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0650689 0.0650689 -0.0688227 0.0688227 63.395 786.745 ] concat
%I
161 525 434 591 Rect
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0729673 -0.0729673 -0.0729673 0.0729673 133.335 843.002 ] concat
%I
319 495 73 73 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0688227 -0.0688227 -0.0688227 0.0688227 130.444 842.699 ] concat
%I
315 506 11 11 Elli
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0688227 -0.0688227 -0.0688227 0.0688227 137.918 850.366 ] concat
%I
343 492 425 515 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0650689 -0.0650689 -0.0688227 0.0688227 137.321 848.53 ] concat
%I
161 525 434 591 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0650689 -0.0650689 -0.0688227 0.0688227 143.432 842.419 ] concat
%I
161 525 434 591 Rect
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0729673 0.0729673 -0.0729673 0.0729673 111.126 796.567 ] concat
%I
319 495 73 73 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0688227 0.0688227 -0.0688227 0.0688227 111.429 799.459 ] concat
%I
315 506 11 11 Elli
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0688227 0.0688227 -0.0688227 0.0688227 103.762 791.984 ] concat
%I
343 492 425 515 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0650689 0.0650689 -0.0688227 0.0688227 105.598 792.581 ] concat
%I
161 525 434 591 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0650689 0.0650689 -0.0688227 0.0688227 111.709 786.47 ] concat
%I
161 525 434 591 Rect
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0729673 0.0729673 0.0729673 0.0729673 49.2746 833.544 ] concat
%I
319 495 73 73 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0688227 0.0688227 0.0688227 0.0688227 48.9717 836.436 ] concat
%I
315 506 11 11 Elli
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0688227 0.0688227 0.0688227 0.0688227 56.6383 828.962 ] concat
%I
343 492 425 515 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0650689 0.0650689 0.0688227 0.0688227 54.8026 829.559 ] concat
%I
161 525 434 591 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0650689 0.0650689 0.0688227 0.0688227 48.6917 823.448 ] concat
%I
161 525 434 591 Rect
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0729673 -0.0729673 0.0729673 0.0729673 2.83955 855.754 ] concat
%I
319 495 73 73 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0688227 -0.0688227 0.0688227 0.0688227 5.73122 855.451 ] concat
%I
315 506 11 11 Elli
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0688227 -0.0688227 0.0688227 0.0688227 -1.74321 863.118 ] concat
%I
343 492 425 515 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0650689 -0.0650689 0.0688227 0.0688227 -1.14633 861.282 ] concat
%I
161 525 434 591 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0650689 -0.0650689 0.0688227 0.0688227 -7.25723 855.171 ] concat
%I
161 525 434 591 Rect
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0729673 0.0729673 0.0729673 0.0729673 48.9993 784.956 ] concat
%I
319 495 73 73 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0688227 0.0688227 0.0688227 0.0688227 48.6964 787.847 ] concat
%I
315 506 11 11 Elli
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0688227 0.0688227 0.0688227 0.0688227 56.363 780.373 ] concat
%I
343 492 425 515 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0650689 0.0650689 0.0688227 0.0688227 54.5273 780.97 ] concat
%I
161 525 434 591 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.0650689 0.0650689 0.0688227 0.0688227 48.4164 774.859 ] concat
%I
161 525 434 591 Rect
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0729673 -0.0729673 0.0729673 0.0729673 2.56425 807.165 ] concat
%I
319 495 73 73 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0688227 -0.0688227 0.0688227 0.0688227 5.45592 806.862 ] concat
%I
315 506 11 11 Elli
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0688227 -0.0688227 0.0688227 0.0688227 -2.01851 814.529 ] concat
%I
343 492 425 515 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0650689 -0.0650689 0.0688227 0.0688227 -1.42163 812.693 ] concat
%I
161 525 434 591 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0650689 -0.0650689 0.0688227 0.0688227 -7.53253 806.582 ] concat
%I
161 525 434 591 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ -0.649342 0 0 0.649342 567.795 229.851 ] concat

Begin %I CBSpl
none SetB %I b n
%I cfg Black
0 0 0 SetCFg
%I cbg Yellow
1 1 0 SetCBg
%I p
1 SetP
%I t
[ 0.997933 -0 -0 0.997933 -0 71.8512 ] concat
%I 52
188 531
183 526
171 494
152 488
151 491
132 500
108 534
108 534
109 499
100 469
88 460
66 456
30 470
30 470
38 458
70 422
75 409
65 393
42 369
42 369
66 370
87 366
100 351
90 305
87 305
120 339
144 339
160 322
179 301
178 302
177 332
189 356
216 369
233 364
389 318
389 320
243 371
228 390
236 400
246 416
636 420
636 421
241 430
222 438
214 451
226 471
236 498
236 498
220 488
191 482
185 496
183 526
52 CBSpl
End

Begin %I Elli
none SetB %I b n
%I cfg Black
0 0 0 SetCFg
%I cbg Black
0 0 0 SetCBg
%I p
1 SetP
%I t
[ -0.400828 0 -0 0.400828 279.24 326.944 ] concat
%I
268 448 7 25 Elli
End

Begin %I Elli
none SetB %I b n
%I cfg Black
0 0 0 SetCFg
%I cbg Black
0 0 0 SetCBg
%I p
1 SetP
%I t
[ -0.400828 0 -0 0.400828 231.14 326.543 ] concat
%I
268 448 7 25 Elli
End

Begin %I Rect
none SetB %I b n
%I cfg Yellow
1 1 0 SetCFg
%I cbg Yellow
1 1 0 SetCBg
%I p
1 SetP
%I t
[ -0.997933 0 0 0.997933 665.316 71.8513 ] concat
%I
487 348 566 391 Rect
End

Begin %I Elli
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg Yellow
1 1 0 SetCBg
none SetP %I p n
%I t
[ -0.400828 0 -0 0.400828 279.641 326.944 ] concat
%I
329 395 166 166 Elli
End

Begin %I BSpl
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg Black
0 0 0 SetCBg
none SetP %I p n
%I t
[ -0.400828 0 -0 0.400828 277.837 326.944 ] concat
%I 8
222 369
231 341
258 314
295 296
350 296
387 314
414 342
427 371
8 BSpl
%I 1
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-240-*
Times-Bold 24 SetF
%I t
[ 1.53918 0 0 1.92398 124.842 539.176 ] concat
%I
[
(Sun Microsystems)
(Laboratories, Inc.)
] Text
End

End %I eop

showpage

%%Trailer

end

%%EndDocument
FMENDEPSF
81 270 729 738 R
V
1 48 Q
0 X
(Experiences Developing with) 109.08 706 T
(Modula-3) 305.02 652 T
0 24 Q
-0.57 (One project member said: \322Modula-3 makes programming fun) 126 576 P
(again!\323) 126 550 T
(I view the SRC Modula-3 implementation as: \322Smalltalk with) 126 478 T
(static types\323) 126 452 T
(\245) 162 416 T
(Clean, simple language) 189 416 T
(\245) 162 380 T
(Understandable inheritance mechanism) 189 380 T
(\245) 162 344 T
(A lot of value-added, cleanly integrated libraries.) 189 344 T
2 F
(T) 225 308 T
(o me, this is one of the best r) 236.13 308 T
(easons to use M3) 510.42 308 T
0 F
(!) 682.31 308 T
FMENDPAGE
%%EndPage: "6" 7
%%Trailer
%%BoundingBox: 0 0 612 792
%%Pages: 6 1
%%DocumentFonts: Times-Roman
%%+ Times-Bold
%%+ Times-Italic
